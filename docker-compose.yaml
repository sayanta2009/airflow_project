version: "3"
services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${SOURCE_POSTGRES_DB}
      POSTGRES_USER: ${SOURCE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SOURCE_POSTGRES_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env

  destination_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    depends_on:
      - source_postgres
    environment:
      POSTGRES_DB: ${DESTINATION_POSTGRES_DB}
      POSTGRES_USER: ${DESTINATION_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DESTINATION_POSTGRES_PASSWORD}
    env_file:
      - ./.env

  elt_script:
    build:
      context: ./elt # Directory containing the Dockerfile and elt_script.py
      dockerfile: Dockerfile # Name of the Dockerfile, if it's something other than "Dockerfile", specify here
    command: ["python", "elt_script.py"]
    networks:
      - elt_network
    depends_on:
      - destination_postgres
    env_file:
      - ./.env

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    command:
      [
        "run",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt",
        "--full-refresh",
      ]
    networks:
      - elt_network
    volumes:
      - ./custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      - elt_script
    environment:
      DBT_PROFILE: default
      DBT_TARGET: dev
    restart: on-failure

networks:
  elt_network:
    driver: bridge
