services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: ${SOURCE_POSTGRES_DB}
      POSTGRES_USER: ${SOURCE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SOURCE_POSTGRES_PASSWORD}
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env

  destination_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    depends_on:
      - source_postgres
    environment:
      POSTGRES_DB: ${DESTINATION_POSTGRES_DB}
      POSTGRES_USER: ${DESTINATION_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DESTINATION_POSTGRES_PASSWORD}
    env_file:
      - ./.env

  postgres: # database airflow will use to store its metadata
    image: postgres:15
    networks:
      - elt_network
    # ports:
    #   - "5435:5432"
    environment:
      POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
      POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
    env_file:
      - ./.env

  init-airflow: # initialize db and user for airflow
    image: apache/airflow:latest
    depends_on:
      - postgres
    networks:
      - elt_network
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
    command: >
      bash -c "airflow db init &&
               airflow users create --username airflow --password password --firstname John --lastname Doe --role Admin --email admin@example.com"
    env_file:
      - ./.env

  webserver: # GUI of airflow
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow_src/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/root
      - /var/run/docker.sock:/var/run/docker.sock # to give airflow access to the docker network
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
      - AIRFLOW_CONN_DESTINATION_POSTGRES=postgres://${DESTINATION_POSTGRES_USER}:${DESTINATION_POSTGRES_PASSWORD}@${DESTINATION_POSTGRES_HOST}:${DESTINATION_POSTGRES_PORT}/${DESTINATION_POSTGRES_DB}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_CORE_FERNET_KEY}
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME=${AIRFLOW_WEBSERVER_USER}
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD=${AIRFLOW_WEBSERVER_PASSWORD}
      - AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_WEBSERVER_USER}
      - AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_WEBSERVER_PASSWORD}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET}
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    command: webserver
    # restart: always

  scheduler: # Airflow scheduler
    build:
      context: .
      dockerfile: Dockerfile
    user: root
    depends_on:
      - postgres
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow_src/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/dbt
      - ~/.dbt:/root/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
      - AIRFLOW_CONN_DESTINATION_POSTGRES=postgres://${DESTINATION_POSTGRES_USER}:${DESTINATION_POSTGRES_PASSWORD}@${DESTINATION_POSTGRES_HOST}:${DESTINATION_POSTGRES_PORT}/${DESTINATION_POSTGRES_DB}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_CORE_FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET}
      - AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_WEBSERVER_USER}
      - AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_WEBSERVER_PASSWORD}
    command: scheduler
    env_file:
      - ./.env

networks:
  elt_network:
    driver: bridge
